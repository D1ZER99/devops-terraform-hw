// Init 
PS G:\My Drive\_Work_Transfer\_Studying\_UKU_Data_Engineering\DevOps\terraform-project\Homework1> terraform init
Initializing the backend...
Initializing provider plugins...
- Reusing previous version of hashicorp/google from the dependency lock file 
- Using previously-installed hashicorp/google v6.8.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,    
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

// Plan
PS G:\My Drive\_Work_Transfer\_Studying\_UKU_Data_Engineering\DevOps\terraform-project\Homework1> terraform plan

Terraform used the selected providers to generate the following execution    
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be created
  + resource "google_bigquery_dataset" "dataset" {
      + creation_time               = (known after apply)
      + dataset_id                  = "my_first_dataset_99"
      + default_collation           = (known after apply)
      + default_table_expiration_ms = 3600000
      + delete_contents_on_destroy  = true
      + description                 = "This is my first dataset"
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                        = (known after apply)
      + friendly_name               = "My First Dataset"
      + id                          = (known after apply)
      + is_case_insensitive         = (known after apply)
      + last_modified_time          = (known after apply)
      + location                    = "US"
      + max_time_travel_hours       = (known after apply)
      + project                     = "terraform-uku-devops"
      + self_link                   = (known after apply)
      + storage_billing_model       = (known after apply)
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }

      + access (known after apply)
    }

  # google_compute_instance.vm_instance will be created
  + resource "google_compute_instance" "vm_instance" {
      + can_ip_forward       = false
      + cpu_platform         = (known after apply)
      + current_status       = (known after apply)
      + deletion_protection  = false
      + effective_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + label_fingerprint    = (known after apply)
      + machine_type         = "e2-standard-2"
      + metadata_fingerprint = (known after apply)
      + min_cpu_platform     = (known after apply)
      + name                 = "vm-instance-99"
      + project              = "terraform-uku-devops"
      + self_link            = (known after apply)
      + tags_fingerprint     = (known after apply)
      + terraform_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + zone                 = "us-central1-c"

      + boot_disk {
          + auto_delete                = true
          + device_name                = (known after apply)
          + disk_encryption_key_sha256 = (known after apply)
          + kms_key_self_link          = (known after apply)
          + mode                       = "READ_WRITE"
          + source                     = (known after apply)

          + initialize_params {
              + image                  = "debian-cloud/debian-11"
              + labels                 = (known after apply)
              + provisioned_iops       = (known after apply)
              + provisioned_throughput = (known after apply)
              + resource_policies      = (known after apply)
              + size                   = (known after apply)
              + type                   = (known after apply)
            }
        }

      + confidential_instance_config (known after apply)

      + guest_accelerator (known after apply)

      + network_interface {
          + internal_ipv6_prefix_length = (known after apply)
          + ipv6_access_type            = (known after apply)
          + ipv6_address                = (known after apply)
          + name                        = (known after apply)
          + network                     = "default"
          + network_ip                  = (known after apply)
          + stack_type                  = (known after apply)
          + subnetwork                  = (known after apply)
          + subnetwork_project          = (known after apply)

          + access_config {
              + nat_ip       = (known after apply)
              + network_tier = (known after apply)
            }
        }

      + reservation_affinity (known after apply)

      + scheduling (known after apply)
    }

  # google_storage_bucket.static will be created
  + resource "google_storage_bucket" "static" {
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + force_destroy               = false
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "dizervf-first-bucket-99"
      + project                     = (known after apply)
      + project_number              = (known after apply)
      + public_access_prevention    = (known after apply)
      + rpo                         = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + soft_delete_policy (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bigquery_dataset_id = "my_first_dataset_99"
  + bucket_name         = "dizervf-first-bucket-99"
  + vm_instance_ip      = (known after apply)

──────────────────────────────────────────────────────────────────────────── 

Note: You didn't use the -out option to save this plan, so Terraform can't   
guarantee to take exactly these actions if you run "terraform apply" now.  

// Apply
PS G:\My Drive\_Work_Transfer\_Studying\_UKU_Data_Engineering\DevOps\terraform-project\Homework1> terraform apply

Terraform used the selected providers to generate the following execution    
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be created
  + resource "google_bigquery_dataset" "dataset" {
      + creation_time               = (known after apply)
      + dataset_id                  = "my_first_dataset_99"
      + default_collation           = (known after apply)
      + default_table_expiration_ms = 3600000
      + delete_contents_on_destroy  = true
      + description                 = "This is my first dataset"
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                        = (known after apply)
      + friendly_name               = "My First Dataset"
      + id                          = (known after apply)
      + is_case_insensitive         = (known after apply)
      + last_modified_time          = (known after apply)
      + location                    = "US"
      + max_time_travel_hours       = (known after apply)
      + project                     = "terraform-uku-devops"
      + self_link                   = (known after apply)
      + storage_billing_model       = (known after apply)
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }

      + access (known after apply)
    }

  # google_compute_instance.vm_instance will be created
  + resource "google_compute_instance" "vm_instance" {
      + can_ip_forward       = false
      + cpu_platform         = (known after apply)
      + current_status       = (known after apply)
      + deletion_protection  = false
      + effective_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + label_fingerprint    = (known after apply)
      + machine_type         = "e2-standard-2"
      + metadata_fingerprint = (known after apply)
      + min_cpu_platform     = (known after apply)
      + name                 = "vm-instance-99"
      + project              = "terraform-uku-devops"
      + self_link            = (known after apply)
      + tags_fingerprint     = (known after apply)
      + terraform_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + zone                 = "us-central1-c"

      + boot_disk {
          + auto_delete                = true
          + device_name                = (known after apply)
          + disk_encryption_key_sha256 = (known after apply)
          + kms_key_self_link          = (known after apply)
          + mode                       = "READ_WRITE"
          + source                     = (known after apply)

          + initialize_params {
              + image                  = "debian-cloud/debian-11"
              + labels                 = (known after apply)
              + provisioned_iops       = (known after apply)
              + provisioned_throughput = (known after apply)
              + resource_policies      = (known after apply)
              + size                   = (known after apply)
              + type                   = (known after apply)
            }
        }

      + confidential_instance_config (known after apply)

      + guest_accelerator (known after apply)

      + network_interface {
          + internal_ipv6_prefix_length = (known after apply)
          + ipv6_access_type            = (known after apply)
          + ipv6_address                = (known after apply)
          + name                        = (known after apply)
          + network                     = "default"
          + network_ip                  = (known after apply)
          + stack_type                  = (known after apply)
          + subnetwork                  = (known after apply)
          + subnetwork_project          = (known after apply)

          + access_config {
              + nat_ip       = (known after apply)
              + network_tier = (known after apply)
            }
        }

      + reservation_affinity (known after apply)

      + scheduling (known after apply)
    }

  # google_storage_bucket.static will be created
  + resource "google_storage_bucket" "static" {
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + force_destroy               = false
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "dizervf-first-bucket-99"
      + project                     = (known after apply)
      + project_number              = (known after apply)
      + public_access_prevention    = (known after apply)
      + rpo                         = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + soft_delete_policy (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bigquery_dataset_id = "my_first_dataset_99"
  + bucket_name         = "dizervf-first-bucket-99"
  + vm_instance_ip      = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_bigquery_dataset.dataset: Creating...
google_storage_bucket.static: Creating...
google_compute_instance.vm_instance: Creating...
google_bigquery_dataset.dataset: Creation complete after 1s [id=projects/terraform-uku-devops/datasets/my_first_dataset_99]
google_storage_bucket.static: Creation complete after 2s [id=dizervf-first-bucket-99]
google_compute_instance.vm_instance: Still creating... [00m10s elapsed]
google_compute_instance.vm_instance: Creation complete after 17s [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

bigquery_dataset_id = "my_first_dataset_99"
bucket_name = "dizervf-first-bucket-99"
vm_instance_ip = "10.128.0.5"

// Destroy
PS G:\My Drive\_Work_Transfer\_Studying\_UKU_Data_Engineering\DevOps\terraform-project\Homework1> terraform destroy
google_storage_bucket.static: Refreshing state... [id=dizervf-first-bucket-99]
google_bigquery_dataset.dataset: Refreshing state... [id=projects/terraform-uku-devops/datasets/my_first_dataset_99]
google_compute_instance.vm_instance: Refreshing state... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99]

Terraform used the selected providers to generate the following execution    
plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be destroyed
  - resource "google_bigquery_dataset" "dataset" {
      - creation_time                   = 1758399740869 -> null
      - dataset_id                      = "my_first_dataset_99" -> null      
      - default_partition_expiration_ms = 0 -> null
      - default_table_expiration_ms     = 3600000 -> null
      - delete_contents_on_destroy      = true -> null
      - description                     = "This is my first dataset" -> null 
      - effective_labels                = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - etag                            = "vW9YNy4usAb8sDsXSVbUEA==" -> null 
      - friendly_name                   = "My First Dataset" -> null
      - id                              = "projects/terraform-uku-devops/datasets/my_first_dataset_99" -> null
      - is_case_insensitive             = false -> null
      - labels                          = {} -> null
      - last_modified_time              = 1758399740869 -> null
      - location                        = "US" -> null
      - max_time_travel_hours           = "168" -> null
      - project                         = "terraform-uku-devops" -> null     
      - resource_tags                   = {} -> null
      - self_link                       = "https://bigquery.googleapis.com/bigquery/v2/projects/terraform-uku-devops/datasets/my_first_dataset_99" -> null
      - terraform_labels                = {
          - "goog-terraform-provisioned" = "true"
        } -> null
        # (2 unchanged attributes hidden)

      - access {
          - role           = "OWNER" -> null
          - user_by_email  = "dizervf@gmail.com" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "OWNER" -> null
          - special_group  = "projectOwners" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "READER" -> null
          - special_group  = "projectReaders" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "WRITER" -> null
          - special_group  = "projectWriters" -> null
            # (4 unchanged attributes hidden)
        }
    }

  # google_compute_instance.vm_instance will be destroyed
  - resource "google_compute_instance" "vm_instance" {
      - can_ip_forward       = false -> null
      - cpu_platform         = "Intel Broadwell" -> null
      - current_status       = "RUNNING" -> null
      - deletion_protection  = false -> null
      - effective_labels     = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - enable_display       = false -> null
      - id                   = "projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99" -> null
      - instance_id          = "719420365308342800" -> null
      - label_fingerprint    = "vezUS-42LLM=" -> null
      - labels               = {} -> null
      - machine_type         = "e2-standard-2" -> null
      - metadata             = {} -> null
      - metadata_fingerprint = "A4bWNIjqp3A=" -> null
      - name                 = "vm-instance-99" -> null
      - project              = "terraform-uku-devops" -> null
      - resource_policies    = [] -> null
      - self_link            = "https://www.googleapis.com/compute/v1/projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99" -> null 
      - tags                 = [] -> null
      - tags_fingerprint     = "42WmSpB8rSM=" -> null
      - terraform_labels     = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - zone                 = "us-central1-c" -> null
        # (3 unchanged attributes hidden)

      - boot_disk {
          - auto_delete                = true -> null
          - device_name                = "persistent-disk-0" -> null
          - mode                       = "READ_WRITE" -> null
          - source                     = "https://www.googleapis.com/compute/v1/projects/terraform-uku-devops/zones/us-central1-c/disks/vm-instance-99" -> null
            # (4 unchanged attributes hidden)

          - initialize_params {
              - enable_confidential_compute = false -> null
              - image                       = "https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-11-bullseye-v20250915" -> null
              - labels                      = {} -> null
              - provisioned_iops            = 0 -> null
              - provisioned_throughput      = 0 -> null
              - resource_manager_tags       = {} -> null
              - resource_policies           = [] -> null
              - size                        = 10 -> null
              - type                        = "pd-standard" -> null
                # (1 unchanged attribute hidden)
            }
        }

      - network_interface {
          - internal_ipv6_prefix_length = 0 -> null
          - name                        = "nic0" -> null
          - network                     = "https://www.googleapis.com/compute/v1/projects/terraform-uku-devops/global/networks/default" -> null
          - network_ip                  = "10.128.0.5" -> null
          - queue_count                 = 0 -> null
          - stack_type                  = "IPV4_ONLY" -> null
          - subnetwork                  = "https://www.googleapis.com/compute/v1/projects/terraform-uku-devops/regions/us-central1/subnetworks/default" -> null
          - subnetwork_project          = "terraform-uku-devops" -> null     
            # (3 unchanged attributes hidden)

          - access_config {
              - nat_ip                 = "35.224.38.32" -> null
              - network_tier           = "PREMIUM" -> null
                # (1 unchanged attribute hidden)
            }
        }

      - scheduling {
          - automatic_restart           = true -> null
          - min_node_cpus               = 0 -> null
          - on_host_maintenance         = "MIGRATE" -> null
          - preemptible                 = false -> null
          - provisioning_model          = "STANDARD" -> null
            # (1 unchanged attribute hidden)
        }

      - shielded_instance_config {
          - enable_integrity_monitoring = true -> null
          - enable_secure_boot          = false -> null
          - enable_vtpm                 = true -> null
        }
    }

  # google_storage_bucket.static will be destroyed
  - resource "google_storage_bucket" "static" {
      - default_event_based_hold    = false -> null
      - effective_labels            = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - enable_object_retention     = false -> null
      - force_destroy               = false -> null
      - id                          = "dizervf-first-bucket-99" -> null      
      - labels                      = {} -> null
      - location                    = "US" -> null
      - name                        = "dizervf-first-bucket-99" -> null      
      - project                     = "terraform-uku-devops" -> null
      - project_number              = 1098742999404 -> null
      - public_access_prevention    = "inherited" -> null
      - requester_pays              = false -> null
      - rpo                         = "DEFAULT" -> null
      - self_link                   = "https://www.googleapis.com/storage/v1/b/dizervf-first-bucket-99" -> null
      - storage_class               = "STANDARD" -> null
      - terraform_labels            = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - uniform_bucket_level_access = true -> null
      - url                         = "gs://dizervf-first-bucket-99" -> null 

      - soft_delete_policy {
          - effective_time             = "2025-09-20T20:22:21.391Z" -> null  
          - retention_duration_seconds = 604800 -> null
        }
    }

Plan: 0 to add, 0 to change, 3 to destroy.

Changes to Outputs:
  - bigquery_dataset_id = "my_first_dataset_99" -> null
  - bucket_name         = "dizervf-first-bucket-99" -> null
  - vm_instance_ip      = "10.128.0.5" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.    
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

google_storage_bucket.static: Destroying... [id=dizervf-first-bucket-99]
google_compute_instance.vm_instance: Destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99]
google_bigquery_dataset.dataset: Destroying... [id=projects/terraform-uku-devops/datasets/my_first_dataset_99]
google_bigquery_dataset.dataset: Destruction complete after 0s
google_storage_bucket.static: Destruction complete after 1s
google_compute_instance.vm_instance: Still destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99, 00m10s elapsed]  
google_compute_instance.vm_instance: Still destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99, 00m20s elapsed]  
google_compute_instance.vm_instance: Still destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99, 00m30s elapsed]  
google_compute_instance.vm_instance: Still destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99, 00m40s elapsed]  
google_compute_instance.vm_instance: Still destroying... [id=projects/terraform-uku-devops/zones/us-central1-c/instances/vm-instance-99, 00m50s elapsed]  
google_compute_instance.vm_instance: Destruction complete after 56s

Destroy complete! Resources: 3 destroyed.